---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import PageHead from '@/components/PageHead.astro'
import Layout from '@/layouts/Layout.astro'
import TimelinePostCard from '@/components/TimelineCard.astro'

interface TimelinePost {
  id: number;
  name: string;
  email: string;
  content: string;
  created_at: string;
}

let timelinePosts: TimelinePost[] = [];
try {
  const response = await fetch('http://mlhportfolio-aaron.duckdns.org:5000/api/timeline_post');
  if (response.ok) {
    const data = await response.json();
    timelinePosts = data.timeline_posts;
  } else {
    console.error('failed to fetch timeline posts:', response.statusText);
  }
} catch (error) {
  console.error('error fetching timeline posts:', error);
}
---

<Layout class="max-w-3xl">
  <PageHead slot="head" title="Timeline" />
  <Breadcrumbs items={[{ label: 'Timeline', icon: 'lucide:clock' }]} />
  <section>
    <div class="min-w-full">
      <h2 class="mb-4 text-2xl font-medium">Create a Post:</h2>
      <div class="prose rounded-xl border p-4 mb-8 bg-primary-foreground/50 backdrop-blur-sm">
        <form id="timelinePostForm" action="http://mlhportfolio-aaron.duckdns.org:5000/api/timeline_post" method="POST">
          <div class="mb-4">
            <label for="name" class="block text-sm font-medium">Name:</label>
            <input type="text" placeholder="john doe" name="name" id="name" required class="bg-secondary-foreground/5 p-2 my-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
          </div>
          <div class="mb-4">
            <label for="email" class="block text-sm font-medium">Email:</label>
            <input type="email" placeholder="example@gmail.com" name="email" id="email" required class="bg-secondary-foreground/5 p-2 my-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
          </div>
          <div class="mb-4">
            <label for="content" class="block text-sm font-medium">Content:</label>
            <textarea name="content" id="content" rows="3" required class="bg-secondary-foreground/5 p-2 my-2 block w-full rounded-md border-gray-300 shadow-sm sm:text-sm"></textarea>
          </div>
          <button type="submit" class="inline-flex justify-center rounded-md border border-transparent bg-secondary/90 py-2 px-4 text-sm font-medium text-white hover:bg-secondary/50 focus:outline-none">
            Add Post
          </button>
        </form>
      </div>

      <h2 class="mb-4 text-2xl font-medium">Timeline Posts:</h2>
      <div class="flex flex-col gap-4">
        {timelinePosts.length > 0 ? (
          timelinePosts.map(post => (
            <TimelinePostCard post={post} />
          ))
        ) : (
          <p>No posts yet. Be the first to add one!</p>
        )}
      </div>
    </div>
  </section>
</Layout>

<script lang="ts">
  document.getElementById('timelinePostForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    try {
      const response = await fetch(form.action, {
        method: form.method,
        body: formData,
      });
      if (response.ok) {
        console.log('Post submitted successfully!');
        form.reset(); 
        window.location.reload(); 
      } else {
        console.error('Failed to submit post:', response.statusText);
        alert('Failed to submit post. Please try again.');
      }
    } catch (error) {
      console.error('Error submitting post:', error);
      form.reset(); 
      window.location.reload();
    }
  });
</script>